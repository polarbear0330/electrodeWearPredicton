% This script is written and read by pdetool and should NOT be edited.
% There are two recommended alternatives:
 % 1) Export the required variables from pdetool and create a MATLAB script
 %    to perform operations on these.
 % 2) Define the problem completely using a MATLAB script. See
 %    http://www.mathworks.com/help/pde/examples/index.html for examples
 %    of this approach.
function [u,E,pos,points_E,EE,max_absE,point_max,maxE] = wholeE
[pde_fig,ax]=pdeinit;
pdetool('appl_cb',5);
set(ax,'DataAspectRatio',[1.5 1 1]);
set(ax,'PlotBoxAspectRatio',[1 0.65943600867678953 0.65943600867678953]);
set(ax,'XLim',[-2 2]);
set(ax,'YLim',[0 3]);
set(ax,'XTickMode','auto');
set(ax,'YTickMode','auto');

% Geometry description:
% pderect([-1.4703947368421053 1.4671052631578947 0.95559210526315774 -0.97532894736842168],'R1');
% pderect([-0.58881578947368429 0.58881578947368407 -0.81414473684210531 -0.98848684210526327],'R2');
% pderect([-0.13486842105263164 0.13486842105263186 0.9753289473684208 -0.80427631578947389],'R3');
pderect([-1.5 1.5 3 0],'R1');
pderect([-0.3 0.3 3.1 0.51],'R2');
pderect([-1 1 0.5 -0.5],'R3');
set(findobj(get(pde_fig,'Children'),'Tag','PDEEval'),'String','R1-R2-R3')

% Boundary conditions:
pdetool('changemode',0)
pdesetbd(12,...
'dir',...
1,...
'1',...
'0')
pdesetbd(11,...
'dir',...
1,...
'1',...
'0')
pdesetbd(10,...
'dir',...
1,...
'1',...
'150')
pdesetbd(9,...
'dir',...
1,...
'1',...
'150')
pdesetbd(8,...
'dir',...
1,...
'1',...
'0')
pdesetbd(7,...
'dir',...
1,...
'1',...
'0')
pdesetbd(6,...
'dir',...
1,...
'1',...
'0')
pdesetbd(5,...
'dir',...
1,...
'1',...
'0')
pdesetbd(4,...
'dir',...
1,...
'1',...
'0')
pdesetbd(3,...
'dir',...
1,...
'1',...
'150')
pdesetbd(2,...
'dir',...
1,...
'1',...
'0')
pdesetbd(1,...
'dir',...
1,...
'1',...
'0')

% Mesh generation:
setappdata(pde_fig,'Hgrad',1.3);
setappdata(pde_fig,'refinemethod','regular');
setappdata(pde_fig,'jiggle',char('on','mean',''));
setappdata(pde_fig,'MesherVersion','preR2013a');
pdetool('initmesh')
pdetool('refine')
pdetool('refine')

% PDE coefficients:
pdeseteq(1,...
'1.0',...
'0.0',...
'0',...
'1.0',...
'0:10',...
'0.0',...
'0.0',...
'[0 100]')
setappdata(pde_fig,'currparam',...
['1.0';...
'0  '])

% Solve parameters:
setappdata(pde_fig,'solveparam',...
char('0','11928','10','pdeadworst',...
'0.5','longest','0','1E-4','','fixed','Inf'))

% Plotflags and user data strings:
setappdata(pde_fig,'plotflags',[2 1 1 1 1 1 7 1 0 0 0 1 1 0 0 0 0 1]);
setappdata(pde_fig,'colstring','');
setappdata(pde_fig,'arrowstring','');
setappdata(pde_fig,'deformstring','');
setappdata(pde_fig,'heightstring','');

% Solve PDE:
pdetool('solve')
u = get(findobj(pde_fig,'Tag','PDEPlotMenu'),'UserData');

%获取相关参数p、t
meshMenu=findobj(get(pde_fig,'Children'),'flat','Tag','PDEMeshMenu');
t=get(findobj(get(meshMenu,'Children'),'flat','Tag','PDEMeshParam'),'UserData');
initMesh=findobj(get(meshMenu,'Children'),'flat','Tag','PDEInitMesh');
point=get(initMesh,'UserData');

%pdetool计算三角形中心处梯度――场强
[Ex,Ey]=pdegrad(point,t,u);
E = [Ex;Ey];
EE = sqrt(Ex.^2 + Ey.^2);
[max_absE,pos] = max(EE,[],2);%dim=2：每一行的最大值

% Triangle point indices
it1 = t(1,:);
it2 = t(2,:);
it3 = t(3,:);
% Find centroids of triangles
xpts = (point(1,it1) + point(1,it2) + point(1,it3))/3;
ypts = (point(2,it1) + point(2,it2) + point(2,it3))/3;
points_E = [xpts;ypts];

%向量E起点
point_max = points_E(:,pos);
%向量E
maxE = E(:,pos);



